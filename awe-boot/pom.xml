<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.almis.awe</groupId>
    <artifactId>awe-starter-parent</artifactId>
    <version>4.0.7-SNAPSHOT</version>
    <relativePath>../awe-starter-parent/pom.xml</relativePath>
  </parent>

  <artifactId>awe-boot</artifactId>
  <packaging>war</packaging>
  <name>AWE Testing Application (V${project.version})</name>

  <properties>
    <!-- Application maven properties -->
    <awe.version>${project.parent.version}</awe.version>
    <java.version>1.8</java.version>
    <application.name>awe-boot</application.name>
    <application.acronym>awe-boot</application.acronym>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.build.frontend>${project.build.directory}/classes/static</project.build.frontend>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <node.version>v11.10.0</node.version>
    <yarn.version>v1.13.0</yarn.version>
    <plugin-spring-boot.version>2.1.0.RELEASE</plugin-spring-boot.version>
    <plugin-frontend.version>1.6</plugin-frontend.version>
    <plugin-dependency.version>3.0.2</plugin-dependency.version>
    <plugin-compiler.version>3.5.1</plugin-compiler.version>
    <plugin-surefire.version>2.20</plugin-surefire.version>
    <plugin-archetype.version>3.0.1</plugin-archetype.version>
    <plugin-xml.maven.version>1.0</plugin-xml.maven.version>
    <plugin-jar.version>3.1.0</plugin-jar.version>
    <plugin-war.version>2.6</plugin-war.version>
    <plugin-resources.version>3.1.0</plugin-resources.version>
    <plugin-javadoc.version>3.0.1</plugin-javadoc.version>
    <plugin-site.version>3.5.1</plugin-site.version>
    <plugin-info-reports.version>2.9</plugin-info-reports.version>
    <selenium.version>3.141.59</selenium.version>
    <phantomjsdriver.version>1.4.3</phantomjsdriver.version>
    <webdrivermanager.version>3.2.0</webdrivermanager.version>
    <testng.version>6.14.3</testng.version>

    <jacoco.base.reports>${project.build.directory}</jacoco.base.reports>
    <jacoco.reportPaths>${jacoco.base.reports}/coverage-reports</jacoco.reportPaths>
    <aggregated.reportPaths>${jacoco.base.reports}/aggregated-reports</aggregated.reportPaths>
    <sonar.exclusions>src/**</sonar.exclusions>
    <sonar.junit.reportPath>${jacoco.base.reports}/surefire-reports</sonar.junit.reportPath>
    <sonar.jacoco.reportPaths>${jacoco.base.reports}/jacoco.exec,${jacoco.base.reports}/jacoco-it.exec</sonar.jacoco.reportPaths>
    <sonar.tests>${project.basedir}/src/test</sonar.tests>
    <surefire.suite>**/AllTestsSuite.class</surefire.suite>
    <failsafe.suite>**/AllTestsSuiteIT.class</failsafe.suite>
    <browser>headless-chrome</browser>
    <skip.main>false</skip.main>
    <skip.selenium>true</skip.selenium>
    <skip.junit>false</skip.junit>
  </properties>

  <dependencies>
    <!-- AWE -->
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-spring-boot-starter</artifactId>
      <exclusions>
        <!-- Use log4j2 lib -->
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-client-angular</artifactId>
    </dependency>

    <!-- Dependencies for jacoco coverage tests -->
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-controller</artifactId>
    </dependency>
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-model</artifactId>
    </dependency>
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-tools</artifactId>
    </dependency>
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-annotation</artifactId>
    </dependency>
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-builder</artifactId>
    </dependency>
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-developer</artifactId>
    </dependency>

    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-builder-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-rest-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-annotations-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-tools-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-developer-spring-boot-starter</artifactId>
    </dependency>

    <!-- ADE -->
    <dependency>
      <groupId>com.almis.ade</groupId>
      <artifactId>ade-spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.python</groupId>
          <artifactId>jython</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- JDBC Drivers -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>runtime</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>com.almis.awe</groupId>
      <artifactId>awe-testing</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>awe-boot</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/application/**</include>
          <include>**/config/**</include>
          <include>**/sql/**</include>
          <include>**/static/**</include>
          <include>*</include>
        </includes>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/resources/images</directory>
        <targetPath>${project.build.directory}/classes/static/images</targetPath>
        <filtering>false</filtering>
      </resource>
    </resources>
    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>${plugin-war.version}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>

      <!-- AWE static resources -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>Copy schemas</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <!-- Awe generic screens -->
                <resource>
                  <directory>../awe-generic-screens/src/main/resources</directory>
                  <includes>
                    <include>schemas/**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>Get web resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.frontend}</outputDirectory>
              <resources>
                <!-- Awe generic screens -->
                <resource>
                  <directory>../awe-generic-screens/src/main/resources</directory>
                  <includes>
                    <include>docs/**</include>
                  </includes>
                </resource>
                <!-- Awe client angular -->
                <resource>
                  <directory>../awe-client-angular/src/main/resources</directory>
                  <includes>
                    <include>images/**</include>
                  </includes>
                </resource>
                <!-- Awe tools -->
                <resource>
                  <directory>../awe-tools/src/main/resources</directory>
                  <includes>
                    <include>images/**</include>
                    <include>css/**</include>
                    <include>js/**</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Spring boot -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <profiles>
            <profile>dev</profile>
          </profiles>
        </configuration>
        <executions>
          <execution>
            <id>repackage</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
          <execution>
            <id>start-application</id>
            <phase>integration-test</phase>
            <configuration>
              <skip>${skip.selenium}</skip>
              <wait>1000</wait>
              <maxAttempts>180</maxAttempts>
            </configuration>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-application</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${skip.selenium}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Application Javascript and CSS management -->
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <configuration>
          <skip>${skip.main}</skip>
        </configuration>
        <executions>
          <execution>
            <id>karma</id>
            <phase>none</phase>
          </execution>
        </executions>
      </plugin>

      <!-- Validate XML files -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <version>${plugin-xml.maven.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>validate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <validationSets>
            <validationSet>
              <dir>${check.xml.directory}/${application.acronym}/</dir>
              <excludes>
                <exclude>templates/**</exclude>
              </excludes>
              <validating>true</validating>
            </validationSet>
          </validationSets>
          <catalogs>
            <catalog>${project.build.directory}/schemas/awe/catalog.xml</catalog>
          </catalogs>
        </configuration>
      </plugin>

      <!-- JUnit -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>${skip.junit}</skip>
          <includes>
            <include>${surefire.suite}</include>
          </includes>
        </configuration>
      </plugin>

      <!-- Failsafe -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <phase>integration-test</phase>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
              <skip>${skip.selenium}</skip>
              <includes>
                <include>${failsafe.suite}</include>
              </includes>
              <systemPropertyVariables>
                <failsafe.browser>${browser}</failsafe.browser>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Integration report profile -->
    <profile>
      <id>generate-integration-report</id>
      <activation>
        <property>
          <name>generateIntegrationReport</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Failsafe -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <executions>
              <execution>
                <id>integration-test</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
            <executions>
              <execution>
                <id>report-integration</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>report-aggregate</goal>
                </goals>
                <configuration>
                  <dataFileIncludes>
                    <dataFileInclude>target/jacoco.exec</dataFileInclude>
                    <dataFileInclude>target/jacoco-it.exec</dataFileInclude>
                  </dataFileIncludes>
                  <outputDirectory>${jacoco.reportPaths}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>start-application</id>
                <phase>integration-test</phase>
                <configuration>
                  <arguments>
                    <argument>--integration-test</argument>
                  </arguments>
                  <wait>1000</wait>
                  <maxAttempts>180</maxAttempts>
                  <fork>true</fork>
                  <jvmArguments>${failsafe.argLine}</jvmArguments>
                </configuration>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
              <execution>
                <id>stop-application</id>
                <phase>post-integration-test</phase>
                <goals>
                  <goal>stop</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
