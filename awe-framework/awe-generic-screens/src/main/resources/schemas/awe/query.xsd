<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!--
  ==============================================================================
  Definition
  ==============================================================================
  -->

  <xs:annotation>
    <xs:appinfo>awe Base Query Schema</xs:appinfo>
    <xs:documentation xml:lang="en">
      This Schema defines the way an awe Query must be structured
    </xs:documentation>
  </xs:annotation>

  <!--
  ==============================================================================
  Includes
  ==============================================================================
  -->

  <xs:include schemaLocation="variable.xsd"/>

  <!--
  ==============================================================================
  Elements
  ==============================================================================
  -->

  <!-- Table Element -->
  <xs:element name="table" type="tableType" />

  <!-- Field Element -->
  <xs:element name="field" type="fieldType" />

  <!-- Constant Element -->
  <xs:element name="constant" type="constantType" />

  <!-- Case Element -->
  <xs:element name="operation" type="operationType" />

  <!-- Case Element -->
  <xs:element name="case" type="caseType" />

  <!-- Case When Element -->
  <xs:element name="when" type="caseWhenType" />

  <!-- Case Then Element -->
  <xs:element name="then" type="operandType" />

  <!-- Case Else Element -->
  <xs:element name="else" type="operandType" />

  <!-- Over Element -->
  <xs:element name="over" type="overType" />

  <!-- Filter Element -->
  <xs:element name="filter" type="filterType"/>

  <!-- And Element -->
  <xs:element name="and" type="filterGroupType"/>

  <!-- Or Element -->
  <xs:element name="or" type="filterGroupType"/>

  <!-- Left operand element -->
  <xs:element name="left-operand" type="operandType" />

  <!-- Right operand element -->
  <xs:element name="right-operand" type="operandType" />

  <!-- Query Element -->
  <xs:element name="query" type="queryType" />

  <!-- Computed Element -->
  <xs:element name="computed" type="computedType" />

  <!-- Compound Element -->
  <xs:element name="compound" type="compoundType" />

  <!-- Where Element -->
  <xs:element name="where" type="whereType"/>

  <!-- Having Element -->
  <xs:element name="having" type="whereType"/>

  <!-- Join Element -->
  <xs:element name="join" type="joinType" />

  <!-- Union Element -->
  <xs:element name="union" type="unionType" />

  <!-- Totalize element -->
  <xs:element name="totalize" type="totalizeType" />

  <!-- Totalize By Element -->
  <xs:element name="totalize-by" type="totalizeElementType" />

  <!-- Totalize Field Element -->
  <xs:element name="totalize-field" type="totalizeElementType" />

  <!-- Group By Element -->
  <xs:element name="group-by" type="groupByType" />

  <!-- Partition By Element -->
  <xs:element name="partition-by" type="groupByType" />

  <!-- Order By Element -->
  <xs:element name="order-by" type="orderByType" />

  <!-- Variable Element -->
  <xs:element name="variable" type="variableType"/>

  <!--
  ==============================================================================
  Group definitions
  ==============================================================================
  -->

  <!-- Queries Group -->
  <xs:group name="queryGroup">
    <xs:choice>
      <xs:element ref="table" />
      <xs:element ref="computed" />
      <xs:element ref="compound" />
      <xs:element ref="field" />
      <xs:element ref="constant" />
      <xs:element ref="operation" />
      <xs:element ref="case" />
      <xs:element ref="over" />
      <xs:element ref="join" />
      <xs:element ref="union" />
      <xs:element ref="variable" />
      <xs:element ref="where" />
      <xs:element ref="having" />
      <xs:element ref="order-by" />
      <xs:element ref="group-by" />
      <xs:element ref="totalize" />
    </xs:choice>
  </xs:group>

  <!-- Group By Element -->
  <xs:complexType name="groupByType">
    <xs:attributeGroup ref="orderAttr" />
  </xs:complexType>

  <!-- Order By Type -->
  <xs:complexType name="orderByType">
    <xs:attributeGroup ref="orderAttr" />
    <xs:attribute name="type" type="orderType" />
    <xs:attribute name="nulls" type="nullsType" />
  </xs:complexType>

  <!--
  ==============================================================================
  Attribute Groups
  ==============================================================================
  -->

  <!-- Query Type -->
  <xs:complexType name="queryType">
    <xs:group ref="queryGroup" minOccurs="0" maxOccurs="unbounded" />
    <xs:attributeGroup ref="queryBaseAttributes" />
    <xs:attribute name="id" use="required" type="xs:string" />
  </xs:complexType>

  <!-- Table Type -->
  <xs:complexType name="tableType">
    <xs:attributeGroup ref="tableQueryAttr" />
  </xs:complexType>

  <!-- Field Type -->
  <xs:complexType name="fieldType">
    <xs:attributeGroup ref="fieldQueryAttr"/>
  </xs:complexType>

  <!-- Operation type -->
  <xs:complexType name="operationType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="field" />
      <xs:element ref="constant" />
      <xs:element ref="operation" />
      <xs:element ref="case" />
      <xs:element ref="over" />
    </xs:choice>
    <xs:attributeGroup ref="operationQueryAttr"/>
  </xs:complexType>

  <!-- Field Type -->
  <xs:complexType name="constantType">
    <xs:attributeGroup ref="constantQueryAttr" />
  </xs:complexType>

  <!-- Case Else type -->
  <xs:complexType name="caseType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="when" />
      <xs:element ref="else" />
    </xs:choice>
    <xs:attributeGroup ref="caseQueryAttr"/>
  </xs:complexType>

  <!-- Over type -->
  <xs:complexType name="overType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="field" />
      <xs:element ref="constant" />
      <xs:element ref="operation" />
      <xs:element ref="case" />
      <xs:element ref="partition-by" />
      <xs:element ref="order-by" />
    </xs:choice>
    <xs:attributeGroup ref="overQueryAttr"/>
  </xs:complexType>

  <!-- Operand Type -->
  <xs:complexType name="operandType">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element ref="field" />
      <xs:element ref="constant" />
      <xs:element ref="operation" />
      <xs:element ref="case" />
    </xs:choice>
  </xs:complexType>


  <!-- FilterGroup Type -->
  <xs:complexType name="filterGroupType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="filter"/>
      <xs:element ref="or"/>
      <xs:element ref="and"/>
    </xs:choice>
  </xs:complexType>

  <!-- Where Type -->
  <xs:complexType name="whereType">
    <xs:choice maxOccurs="unbounded">
      <xs:element ref="filter"/>
      <xs:element ref="or"/>
      <xs:element ref="and"/>
    </xs:choice>
  </xs:complexType>

  <!-- Compound type -->
  <xs:complexType name="compoundType">
    <xs:sequence maxOccurs="unbounded">
      <xs:element ref="computed" />
    </xs:sequence>
    <xs:attribute name="alias" use="required" type="xs:string" />
  </xs:complexType>

  <!-- Computed Element -->
  <xs:complexType name="computedType">
    <xs:attribute name="alias" use="required" type="xs:string" />
    <xs:attribute name="format" use="required" />
    <xs:attribute name="eval" type="booleanEnum" />
    <xs:attribute name="nullValue" type="xs:string" />
    <xs:attribute name="transform" type="transformType" />
    <xs:attribute name="pattern" type="xs:string" />
    <xs:attribute name="translate" type="xs:string" />
    <xs:attribute name="label" type="xs:string" />
  </xs:complexType>

  <!-- Case When type -->
  <xs:complexType name="caseWhenType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="left-operand" />
      <xs:element ref="right-operand" />
      <xs:element ref="then" />
    </xs:choice>
    <xs:attributeGroup ref="filterAttr"/>
  </xs:complexType>

  <!-- Filter Type -->
  <xs:complexType name="filterType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="left-operand" />
      <xs:element ref="right-operand" />
    </xs:choice>
    <xs:attributeGroup ref="filterAttr"/>
  </xs:complexType>

  <!-- Join Element -->
  <xs:complexType name="joinType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="table" />
      <xs:element ref="or" />
      <xs:element ref="and" />
    </xs:choice>
    <xs:attribute name="type" type="joinElementType" />
  </xs:complexType>

  <!-- Union Element -->
  <xs:complexType name="unionType">
    <xs:attribute name="query" use="required" type="xs:string" />
    <xs:attribute name="type" type="unionElementType" />
  </xs:complexType>

  <!-- Totalize Type -->
  <xs:complexType name="totalizeType">
    <xs:choice minOccurs="0" maxOccurs="unbounded">
      <xs:element ref="totalize-by" />
      <xs:element ref="totalize-field" />
    </xs:choice>
    <xs:attribute name="function" use="required" type="aggregationFunctions" />
    <xs:attribute name="label" use="required" type="xs:string" />
    <xs:attribute name="field" use="required" type="xs:string" />
    <xs:attribute name="style" use="required" type="totalizeStyleType" />
  </xs:complexType>

  <!-- Totalize Element Type -->
  <xs:complexType name="totalizeElementType">
    <xs:attribute name="field" use="required" type="xs:string" />
  </xs:complexType>

  <!-- Table Attributes -->
  <xs:attributeGroup name="tableAttr">
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="schema" type="xs:string"/> 
  </xs:attributeGroup>

  <!-- Table Attributes -->
  <xs:attributeGroup name="tableQueryAttr">
    <xs:attributeGroup ref="tableAttr"/>
    <xs:attribute name="query" type="xs:string"/>
    <xs:attribute name="alias" type="xs:string"/>
  </xs:attributeGroup>

  <!-- Table Attributes -->
  <xs:attributeGroup name="tableMaintainAttr">
    <xs:attributeGroup ref="tableAttr"/>
  </xs:attributeGroup>

  <xs:attributeGroup name="queryBaseAttributes">
    <xs:attribute name="distinct" type="booleanEnum" />
    <xs:attribute name="enumerated" type="xs:string" />
    <xs:attribute name="service" type="xs:string" />
    <xs:attribute name="queue" type="xs:string" />
    <xs:attribute name="cacheable" type="booleanEnum" />
    <xs:attribute name="managed-pagination" type="booleanEnum" />
    <xs:attribute name="public" type="booleanEnum" />
  </xs:attributeGroup>

  <!-- Base Field Attributes -->
  <xs:attributeGroup name="baseQueryAttr">
    <xs:attributeGroup ref="allFieldsAttr"/>
    <xs:attribute name="noprint" type="booleanEnum"/>
    <xs:attribute name="transform" type="transformType"/>
    <xs:attribute name="pattern" type="xs:string"/>
    <xs:attribute name="translate" type="xs:string"/>
    <xs:attribute name="format-from" type="xs:string"/>
    <xs:attribute name="format-to" type="xs:string" />
    <xs:attribute name="alias" type="xs:string"/>
    <xs:attribute name="audit" type="booleanEnum"/>
    <xs:attribute name="key" type="booleanEnum"/>
  </xs:attributeGroup>

  <!-- AllFieldsAttr -->
  <xs:attributeGroup name="allFieldsAttr">
    <xs:attribute name="id" type="xs:string"/>
    <xs:attribute name="table" type="xs:string"/>
    <xs:attribute name="function" type="functionTypeEnum"/>
    <xs:attribute name="cast" type="castType"/>
  </xs:attributeGroup>

  <!-- Base Field Attributes -->
  <xs:attributeGroup name="fieldAttr">
    <xs:attribute name="query" type="xs:string"/>
    <xs:attribute name="variable" type="xs:string"/>
    <xs:attribute name="sequence" type="xs:string"/>
  </xs:attributeGroup>

  <!-- Field Attributes -->
  <xs:attributeGroup name="fieldQueryAttr">
    <xs:attributeGroup ref="baseQueryAttr"/>
    <xs:attributeGroup ref="fieldAttr"/>
  </xs:attributeGroup>

  <!-- Constant Attributes -->
  <xs:attributeGroup name="constantAttr">
    <xs:attribute name="value" type="xs:string"/>
    <xs:attribute name="type" type="variableRestriction"/>
  </xs:attributeGroup>

  <!-- Constant Attributes -->
  <xs:attributeGroup name="constantQueryAttr">
    <xs:attributeGroup ref="baseQueryAttr"/>
    <xs:attributeGroup ref="constantAttr"/>
  </xs:attributeGroup>

  <!-- Operation Attributes -->
  <xs:attributeGroup name="operationAttr">
    <xs:attribute name="operator" type="operationRestriction" use="required"/>
  </xs:attributeGroup>

  <!-- Operation Attributes -->
  <xs:attributeGroup name="operationQueryAttr">
    <xs:attributeGroup ref="baseQueryAttr"/>
    <xs:attributeGroup ref="operationAttr"/>
  </xs:attributeGroup>

  <!-- Case Attributes -->
  <xs:attributeGroup name="caseQueryAttr">
    <xs:attributeGroup ref="baseQueryAttr"/>
  </xs:attributeGroup>

  <!-- Over Attributes -->
  <xs:attributeGroup name="overQueryAttr">
    <xs:attributeGroup ref="baseQueryAttr"/>
  </xs:attributeGroup>

  <!-- Filter Attributes -->
  <xs:attributeGroup name="filterAttr">
    <xs:attribute name="condition" use="required" type="conditionEnum"/>
    <xs:attribute name="left-field" type="xs:string"/>
    <xs:attribute name="left-table" type="xs:string"/>
    <xs:attribute name="left-variable" type="xs:string"/>
    <xs:attribute name="left-function" type="functionTypeEnum"/>
    <xs:attribute name="right-field" type="xs:string"/>
    <xs:attribute name="right-table" type="xs:string"/>
    <xs:attribute name="right-variable" type="xs:string"/>
    <xs:attribute name="right-function" type="functionTypeEnum"/>
    <xs:attribute name="ignorecase" type="booleanEnum"/>
    <xs:attribute name="trim" type="booleanEnum"/>
    <xs:attribute name="optional" type="booleanEnum"/>
    <xs:attribute name="query" type="xs:string"/>
    <xs:attribute name="type" type="valueTypeEnum"/>
  </xs:attributeGroup>

  <!-- Order Call Attributes -->
  <xs:attributeGroup name="orderAttr">
    <xs:attribute name="field" use="required" type="xs:string" />
    <xs:attribute name="table" type="xs:string" />
    <xs:attribute name="function" type="functionTypeEnum" />
  </xs:attributeGroup>

  <!--
  ==============================================================================
  Restriction definitions
  ==============================================================================
  -->

  <!-- Totalize Style Enumeration -->
  <xs:simpleType name="totalizeStyleType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="TOTAL" />
      <xs:enumeration value="SUBTOTAL" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Join Type Enumeration -->
  <xs:simpleType name="joinElementType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FULL" />
      <xs:enumeration value="INNER" />
      <xs:enumeration value="LEFT" />
      <xs:enumeration value="RIGHT" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Union Type Enumeration -->
  <xs:simpleType name="unionElementType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALL" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Transformation type -->
  <xs:simpleType name="transformType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DATE"/>
      <xs:enumeration value="DATE_MS"/>
      <xs:enumeration value="TIME"/>
      <xs:enumeration value="TIMESTAMP"/>
      <xs:enumeration value="JS_DATE"/>
      <xs:enumeration value="JS_TIMESTAMP"/>
      <xs:enumeration value="NUMBER"/>
      <xs:enumeration value="NUMBER_PLAIN"/>
      <xs:enumeration value="TEXT_HTML"/>
      <xs:enumeration value="TEXT_UNILINE"/>
      <xs:enumeration value="TEXT_PLAIN"/>
      <xs:enumeration value="MARKDOWN_HTML"/>
      <xs:enumeration value="DECRYPT"/>
      <xs:enumeration value="GENERIC_DATE"/>
      <xs:enumeration value="DATE_RDB"/>
      <xs:enumeration value="ARRAY"/>
    </xs:restriction>
  </xs:simpleType>

  <!-- Condition type -->
  <xs:simpleType name="conditionEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="eq" />
      <xs:enumeration value="ne" />
      <xs:enumeration value="ge" />
      <xs:enumeration value="le" />
      <xs:enumeration value="gt" />
      <xs:enumeration value="lt" />
      <xs:enumeration value="in" />
      <xs:enumeration value="not in" />
      <xs:enumeration value="is null" />
      <xs:enumeration value="is not null" />
      <xs:enumeration value="like" />
      <xs:enumeration value="not like" />
      <xs:enumeration value="exists" />
      <xs:enumeration value="not exists" />
    </xs:restriction>
  </xs:simpleType>
  
  <!-- Filter value type -->
  <xs:simpleType name="valueTypeEnum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="NUMBER" />
      <xs:enumeration value="DECIMAL_NUMBER" />
      <xs:enumeration value="DATE" />
      <xs:enumeration value="TIME" />
      <xs:enumeration value="STRING" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Function list -->
  <xs:simpleType name="functionTypeEnum">
    <xs:union memberTypes="aggregationFunctions fieldFunctions"/>
  </xs:simpleType>

  <!-- Cast list -->
  <xs:simpleType name="castType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="INTEGER" />
      <xs:enumeration value="LONG" />
      <xs:enumeration value="FLOAT" />
      <xs:enumeration value="DOUBLE" />
      <xs:enumeration value="STRING" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Field function list -->
  <xs:simpleType name="fieldFunctions">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ABS" />
      <xs:enumeration value="TRUNCDATE" />
      <xs:enumeration value="ROW_NUMBER" />
      <xs:enumeration value="YEAR" />
      <xs:enumeration value="MONTH" />
      <xs:enumeration value="DAY" />
      <xs:enumeration value="HOUR" />
      <xs:enumeration value="MINUTE" />
      <xs:enumeration value="SECOND" />
      <xs:enumeration value="TRIM" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Aggregation functions -->
  <xs:simpleType name="aggregationFunctions">
    <xs:restriction base="xs:string">
      <xs:enumeration value="AVG" />
      <xs:enumeration value="CNT" />
      <xs:enumeration value="CNT_DISTINCT" />
      <xs:enumeration value="MAX" />
      <xs:enumeration value="MIN" />
      <xs:enumeration value="SUM" />
      <xs:enumeration value="FIRST_VALUE" />
      <xs:enumeration value="LAST_VALUE" />
      <xs:enumeration value="LAG" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Operation restriction list -->
  <xs:simpleType name="operationRestriction">
    <xs:restriction base="xs:string">
      <xs:enumeration value="CONCAT" />
      <xs:enumeration value="NULLIF" />
      <xs:enumeration value="COALESCE" />
      <xs:enumeration value="ADD" />
      <xs:enumeration value="SUB" />
      <xs:enumeration value="MULT" />
      <xs:enumeration value="DIV" />
      <xs:enumeration value="POWER" />
      <xs:enumeration value="ADD_SECONDS" />
      <xs:enumeration value="ADD_MINUTES" />
      <xs:enumeration value="ADD_HOURS" />
      <xs:enumeration value="ADD_DAYS" />
      <xs:enumeration value="ADD_WEEKS" />
      <xs:enumeration value="ADD_MONTHS" />
      <xs:enumeration value="ADD_YEARS" />
      <xs:enumeration value="SUB_SECONDS" />
      <xs:enumeration value="SUB_MINUTES" />
      <xs:enumeration value="SUB_HOURS" />
      <xs:enumeration value="SUB_DAYS" />
      <xs:enumeration value="SUB_WEEKS" />
      <xs:enumeration value="SUB_MONTHS" />
      <xs:enumeration value="SUB_YEARS" />
      <xs:enumeration value="DIFF_SECONDS" />
      <xs:enumeration value="DIFF_MINUTES" />
      <xs:enumeration value="DIFF_HOURS" />
      <xs:enumeration value="DIFF_DAYS" />
      <xs:enumeration value="DIFF_WEEKS" />
      <xs:enumeration value="DIFF_MONTHS" />
      <xs:enumeration value="DIFF_YEARS" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Order Type Enumeration -->
  <xs:simpleType name="orderType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ASC" />
      <xs:enumeration value="DESC" />
    </xs:restriction>
  </xs:simpleType>

  <!-- Nulls Type Enumeration -->
  <xs:simpleType name="nullsType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="FIRST" />
      <xs:enumeration value="LAST" />
    </xs:restriction>
  </xs:simpleType>

</xs:schema>
