<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.almis.awe</groupId>
    <artifactId>awe-framework</artifactId>
    <version>4.2.8</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>awe-dependencies</artifactId>
  <packaging>pom</packaging>
  <name>AWE Dependencies (V${project.version})</name>
  <description>AWE Dependencies</description>

  <properties>
    <!-- dependency versions -->
    <awe.version>${revision}</awe.version>
    <ade.version>2.0.14</ade.version>
    <spring-boot.version>2.2.10.RELEASE</spring-boot.version>
    <spring-cloud.version>Greenwich.SR2</spring-cloud.version>
    <ehcache.version>3.6.1</ehcache.version>
    <javax.activation.version>1.2.0</javax.activation.version>
    <jaxb.api.version>2.3.0</jaxb.api.version>
    <node.version>v12.1.0</node.version>
    <yarn.version>v1.15.2</yarn.version>
    <npm.version>v6.9.0</npm.version>
    <guava.version>27.0.1-jre</guava.version>
    <st.version>4.0.8</st.version>
    <flexmark.version>0.50.46</flexmark.version>
    <mail.version>1.4.7</mail.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-text.version>1.8</commons-text.version>
    <annotation-api.version>1.3.2</annotation-api.version>
    <aspectjweaver.version>1.9.2</aspectjweaver.version>
    <graalvm.version>20.2.0</graalvm.version>
    <selenium.version>3.141.59</selenium.version>
    <lombok.version>1.18.6</lombok.version>
    <querydsl.version>4.2.1</querydsl.version>
    <jacoco.version>0.8.5</jacoco.version>

    <!-- Compilation -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.8</java.version>

    <!-- plugin versions -->
    <plugin-spring-boot.version>2.1.5.RELEASE</plugin-spring-boot.version>
    <plugin-frontend.version>1.9.1</plugin-frontend.version>
    <plugin-compiler.version>3.5.1</plugin-compiler.version>
    <plugin-war.version>3.3.1</plugin-war.version>
    <plugin-sonar.version>3.5.0.1254</plugin-sonar.version>
    <plugin-surefire.version>3.0.0-M5</plugin-surefire.version>
    <plugin-failsafe.version>3.0.0-M5</plugin-failsafe.version>
    <plugin-xml-maven.version>1.0.1</plugin-xml-maven.version>
    <plugin-jar.version>3.1.0</plugin-jar.version>
    <plugin-ant.version>1.8</plugin-ant.version>
    <plugin-flatten-maven.version>1.1.0</plugin-flatten-maven.version>
    <plugin-javadoc.version>3.1.1</plugin-javadoc.version>
    <plugin-resources.version>3.1.0</plugin-resources.version>
    <plugin-lombok.version>${lombok.version}.0</plugin-lombok.version>
    <!-- Karma configuration -->
    <karma.launch.edge>true</karma.launch.edge>
    <karma.launch.gitlab>false</karma.launch.gitlab>

    <!-- Skip configuration -->
    <skip.selenium>true</skip.selenium>
    <skip.main>false</skip.main>
    <skip.frontend>false</skip.frontend>
    <skip.delombok>true</skip.delombok>
  </properties>

  <dependencies>
    <!-- Junit -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>

      <!-- spring boot -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- spring cloud -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- AWE Modules -->
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-builder-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-annotations-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-developer-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-notifier-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-rest-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-tools-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-scheduler-spring-boot-starter</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-controller</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-model</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-client-angular</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-rest</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-tools</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-developer</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-notifier</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-builder</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-annotation</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-scheduler</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-generic-screens</artifactId>
        <version>${awe.version}</version>
      </dependency>
      <dependency>
        <groupId>com.almis.awe</groupId>
        <artifactId>awe-testing</artifactId>
        <version>${awe.version}</version>
      </dependency>

      <!-- ADE Modules -->
      <dependency>
        <groupId>com.almis.ade</groupId>
        <artifactId>ade-spring-boot-starter</artifactId>
        <version>${ade.version}</version>
      </dependency>

      <!-- Tools -->
      <dependency>
        <groupId>com.querydsl</groupId>
        <artifactId>querydsl-sql</artifactId>
        <version>${querydsl.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>org.antlr</groupId>
        <artifactId>ST4</artifactId>
        <version>${st.version}</version>
      </dependency>
      <dependency>
        <groupId>com.vladsch.flexmark</groupId>
        <artifactId>flexmark</artifactId>
        <version>${flexmark.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>${mail.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-text</artifactId>
        <version>${commons-text.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>${annotation-api.version}</version>
      </dependency>
      <!-- Jaxb-api for ehcache > Jdk11 -->
      <dependency>
        <groupId>com.sun.activation</groupId>
        <artifactId>javax.activation</artifactId>
        <version>${javax.activation.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>${jaxb.api.version}</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>${jaxb.api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.graalvm.js</groupId>
        <artifactId>js</artifactId>
        <version>${graalvm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.graalvm.js</groupId>
        <artifactId>js-scriptengine</artifactId>
        <version>${graalvm.version}</version>
      </dependency>

      <!-- Lombok -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Aspects -->
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectjweaver.version}</version>
      </dependency>

      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-server</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-api</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-chrome-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-edge-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-firefox-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-ie-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-java</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-remote-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-safari-driver</artifactId>
        <version>${selenium.version}</version>
      </dependency>
      <dependency>
        <groupId>org.seleniumhq.selenium</groupId>
        <artifactId>selenium-support</artifactId>
        <version>${selenium.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <finalName>${project.artifactId}</finalName>
    <!-- Plugins -->
    <pluginManagement>
      <plugins>
        <!-- war plugin -->
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>${plugin-war.version}</version>
        </plugin>
        <!-- Spring boot -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${plugin-spring-boot.version}</version>
        </plugin>
        <!-- Lombok -->
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>${plugin-lombok.version}</version>
          <configuration>
            <skip>${skip.delombok}</skip>
            <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
            <outputDirectory>${project.build.directory}/delombok</outputDirectory>
            <addOutputDirectory>false</addOutputDirectory>
          </configuration>
          <executions>
            <execution>
              <phase>generate-sources</phase>
              <goals>
                <goal>delombok</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Frontend -->
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${plugin-frontend.version}</version>
          <configuration>
            <skip>${skip.frontend}</skip>
            <environmentVariables>
              <NODE_ENV>${build.environment}</NODE_ENV>
            </environmentVariables>
          </configuration>
          <executions>
            <execution>
              <phase>compile</phase>
              <id>install node and yarn</id>
              <goals>
                <goal>install-node-and-yarn</goal>
              </goals>
              <configuration>
                <nodeVersion>${node.version}</nodeVersion>
                <yarnVersion>${yarn.version}</yarnVersion>
              </configuration>
            </execution>
            <execution>
              <phase>compile</phase>
              <id>yarn install</id>
              <goals>
                <goal>yarn</goal>
              </goals>
              <configuration>
                <arguments>install</arguments>
              </configuration>
            </execution>
            <execution>
              <phase>compile</phase>
              <id>webpack</id>
              <goals>
                <goal>webpack</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <!-- Xml validation -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>${plugin-xml-maven.version}</version>
          <executions>
            <execution>
              <id>validate</id>
              <phase>none</phase>
            </execution>
          </executions>
          <configuration>
            <validationSets>
              <validationSet>
                <dir>${check.xml.directory}/${application.acronym}/</dir>
                <excludes>
                  <exclude>templates/**</exclude>
                </excludes>
                <validating>true</validating>
              </validationSet>
            </validationSets>
            <catalogs>
              <catalog>${project.build.directory}/schemas/awe/catalog.xml</catalog>
            </catalogs>
          </configuration>
        </plugin>

        <!-- Compiler -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${plugin-compiler.version}</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${plugin-jar.version}</version>
        </plugin>

        <!-- Surefire Junit test -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${plugin-surefire.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${plugin-failsafe.version}</version>
        </plugin>
        <!-- Resources -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${plugin-resources.version}</version>
        </plugin>
        <!-- Ant plugin -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${plugin-ant.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${plugin-flatten-maven.version}</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <!-- Create an effective POM (with versions expanded) for the CLI and
              documentation -->
            <id>flatten-effective-pom</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <updatePomFile>false</updatePomFile>
              <outputDirectory>${project.build.directory}/effective-pom</outputDirectory>
              <flattenedPomFilename>awe-dependencies.xml</flattenedPomFilename>
              <flattenMode>oss</flattenMode>
              <pomElements>
                <dependencyManagement>expand</dependencyManagement>
                <pluginManagement>expand</pluginManagement>
                <properties>remove</properties>
                <repositories>remove</repositories>
              </pomElements>
            </configuration>
          </execution>
          <execution>
            <!-- Flatten and simplify our own POM for install/deploy -->
            <id>flatten</id>
            <phase>process-resources</phase>
            <goals>
              <goal>flatten</goal>
            </goals>
            <configuration>
              <updatePomFile>true</updatePomFile>
              <flattenMode>bom</flattenMode>
              <outputDirectory>${project.basedir}</outputDirectory>
              <pomElements>
                <pluginManagement>keep</pluginManagement>
                <properties>keep</properties>
                <repositories>remove</repositories>
              </pomElements>
            </configuration>
          </execution>
          <execution>
            <id>flatten-clean</id>
            <phase>clean</phase>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <inherited>false</inherited>
        <executions>
          <execution>
            <!-- Cleanup the effective POM -->
            <id>post-process-effective-pom</id>
            <phase>process-resources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${project.build.directory}/effective-pom</dir>
                  <outputDir>${project.build.directory}/effective-pom</outputDir>
                  <stylesheet>src/main/resources/xslt/post-process-flattened-pom.xsl</stylesheet>
                  <outputProperties>
                    <outputProperty>
                      <name>indent</name>
                      <value>yes</value>
                    </outputProperty>
                  </outputProperties>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
          <execution>
            <!-- Cleanup the flattened project POM -->
            <id>post-process-flattened-pom</id>
            <phase>process-resources</phase>
            <goals>
              <goal>transform</goal>
            </goals>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <dir>${project.basedir}</dir>
                  <outputDir>${project.basedir}</outputDir>
                  <includes>
                    <include>.flattened-pom.xml</include>
                  </includes>
                  <stylesheet>src/main/resources/xslt/post-process-flattened-pom.xsl</stylesheet>
                  <outputProperties>
                    <outputProperty>
                      <name>indent</name>
                      <value>yes</value>
                    </outputProperty>
                  </outputProperties>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build-helper-maven-plugin.version}</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <!-- Attach effective POM -->
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/effective-pom/awe-dependencies.xml</file>
                  <type>effective-pom</type>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <!-- Integration report profile -->
    <profile>
      <id>generate-integration-report</id>
      <activation>
        <property>
          <name>generateIntegrationReport</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- Jacoco coverage -->
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-unit-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <append>true</append>
                  <destFile>${jacoco.base.reports}/jacoco.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>prepare-integration-agent</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
                <configuration>
                  <skip>${skip.selenium}</skip>
                  <append>true</append>
                  <dumpOnExit>true</dumpOnExit>
                  <destFile>${jacoco.base.reports}/jacoco-it.exec</destFile>
                  <propertyName>failsafe.argLine</propertyName>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>test-javadoc</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>xml-maven-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <executions>
              <execution>
                <id>default-compile</id>
                <phase>none</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok-maven-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
