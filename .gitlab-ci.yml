##############################
# Pipeline definition
##############################

image: docker:latest

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_REPO_PATH: ".m2/repository"
  SAST_PULL_ANALYZER_IMAGES: "0"
  SAST_RUN_ANALYZER_TIMEOUT: 30m
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SONAR_OPTS: "-Dsonar.projectKey=AWE -Dsonar.organization=almis-open-source -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN -Dsonar.branch.name=$CI_COMMIT_REF_NAME"
  JACOCO_OPTS: "-DgenerateIntegrationReport=true -Dskip.selenium=false -Dkarma.launch.gitlab=true -Djava.debug=true"
  GENERAL_BROWSER_OPTS: "-f awe-tests/awe-boot/pom.xml -Dskip.junit=true -Dskip.karma=true -Dskip.selenium=false"
  DEPLOY_OPTS: "-DskipTests -Dskip.karma=true -Dskip.javadoc=false -Dbuild.environment=production"
  CHROME_OPTS: "-Dbrowser=headless-chrome"
  FIREFOX_OPTS: "-Dbrowser=headless-firefox"
  CI_PROJECT_URL_SSH: "origin git@gitlab.com:awe-team/awe.git"
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci
  KUBERNETES_PROJECT_ID: wired-armor-229610
  KUBERNETES_CLUSTER_NAME: awe-boot-cluster
  CACHE_KEY: "$CI_PIPELINE_IID-$CI_COMMIT_REF_SLUG"

cache:
  key: $CACHE_KEY
  policy: pull
  paths:
  - .m2/repository/
  - awe-framework/awe-client-angular/node_modules/
  - awe-framework/awe-modules/awe-tools/node_modules/

stages:
- build
- test
- analysis
- site
- package
- deploy
- release

#include:
#  - template: SAST.gitlab-ci.yml
#  - template: Dependency-Scanning.gitlab-ci.yml

# Testing extension
.testing:
  stage: test
  tags:
  - shared
  allow_failure: true
  script:
  - mvn -f awe-tests/awe-boot/pom.xml $MAVEN_CLI_OPTS verify $GENERAL_BROWSER_OPTS $BROWSER_OPTS
  - search=`cat awe-tests/awe-boot/target/surefire-reports/TEST-com.almis.awe.test.AllTestsSuiteIT.xml`
  - errors=`echo $search | grep 'errors="[^"]*' | sed -e 's/.*errors="//g' | sed -e 's/".*//g' | awk 'BEGIN { FPAT="[0-9]+"} {printf $1}'`
  - failures=`echo $search | grep 'failures="[^"]*' | sed -e 's/.*failures="//g' | sed -e 's/".*//g' | awk 'BEGIN { FPAT="[0-9]+"} {printf $1}'`
  - echo "$errors errors and $failures failures found"
  - exitWithErrors=`echo $errors $failures | awk 'BEGIN { FPAT="[0-9]+"} {printf ($1+$2>0)}'`
  - exit $exitWithErrors
  except:
  - release/.*
  - feature/test-deploy
  artifacts:
    paths:
    - awe-tests/awe-boot/target/tests/
    - awe-tests/awe-boot/target/surefire-reports/
    reports:
      junit:
      - awe-tests/awe-boot/target/surefire-reports/TEST-*.xml
    when: on_failure

# Analysis extension
.analyze:
  tags:
  - docker
  except:
  - release/.*
  - feature/test-deploy

# Kubernetes deployment
.k8s_deploy:
  image: google/cloud-sdk
  stage: deploy
  script:
  - echo "$GOOGLE_KEY" > key.json
  - gcloud auth activate-service-account --key-file key.json
  - gcloud config set compute/zone europe-west3-b
  - gcloud config set project $KUBERNETES_PROJECT_ID
  - gcloud config set container/use_client_certificate True
  - gcloud container clusters get-credentials $KUBERNETES_CLUSTER_NAME
  - kubectl delete secret registry.gitlab.com
  - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=$CI_USERNAME --docker-password=$CI_PASSWORD --docker-email=$CI_EMAIL
  - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" awe-tests/awe-boot/deployment.yaml
  - kubectl apply -f awe-tests/awe-boot/deployment.yaml --namespace=$CI_ENVIRONMENT_SLUG
# - echo "$GOOGLE_KEY" > key.json
# - gcloud auth activate-service-account --key-file key.json
# - gcloud config set compute/zone europe-west3-b
# - gcloud config set project $KUBERNETES_PROJECT_ID
# - gcloud config set container/use_client_certificate True
# - gcloud container clusters get-credentials $KUBERNETES_CLUSTER_NAME
# - kubectl config set-cluster $KUBERNETES_CLUSTER_NAME --server="$KUBE_URL" --insecure-skip-tls-verify=true
# - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
# - kubectl config set-context default-system --cluster=$KUBERNETES_CLUSTER_NAME --user=admin
# - kubectl config use-context default-system
# - kubectl delete secret registry.gitlab.com
# - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=$CI_USERNAME --docker-password=$CI_PASSWORD --docker-email=$CI_EMAIL
# - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" awe-tests/awe-boot/deployment.yaml
# - kubectl delete --all pods --namespace=$CI_ENVIRONMENT_SLUG
# - kubectl apply -f awe-tests/awe-boot/deployment.yaml --namespace=$CI_ENVIRONMENT_SLUG

# GIT push credentials
.git_push_credentials_template: &git_push_credentials |
  'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  eval $(ssh-agent -s)
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  chmod 644 ~/.ssh/known_hosts
  git config --global user.email no-reply@almis.com
  git config --global user.name "Gitlab CI"
  git remote set-url $CI_PROJECT_URL_SSH

##############################
# Build stage
##############################

maven-build:
  image: registry.gitlab.com/aweframework/docker-tools/browsers-node-maven:latest
  stage: build
  cache:
    key: $CACHE_KEY
    policy: push
    paths:
    - .m2/repository/
    - awe-framework/awe-client-angular/node_modules/
    - awe-framework/awe-modules/awe-tools/node_modules/
  tags:
  - shared
  script:
  - mvn $MAVEN_CLI_OPTS clean install sonar:sonar $JACOCO_OPTS $SONAR_OPTS
  - cat awe-tests/awe-boot/target/coverage-reports/index.html | grep -o 'Total[^%]*%' | sed -e 's/Total/Jacoco-Test-Coverage:/g'
  retry: 2
  artifacts:
    paths:
    - awe-tests/awe-boot/target/awe-boot.war
    - awe-tests/awe-boot/target/tests/
    - awe-tests/awe-boot/target/coverage-reports/
    - awe-tests/awe-boot/target/surefire-reports/
    - awe-framework/awe-client-angular/target/reports/karma/
    reports:
      junit:
      - awe-tests/awe-boot/target/surefire-reports/TEST-*.xml
      - awe-framework/awe-client-angular/target/reports/karma/junit/*.xml
  except:
  - release/.*
  - feature/test-deploy

##############################
# Testing stage
##############################

test-chrome:
  extends: .testing
  image: registry.gitlab.com/aweframework/docker-tools/browsers-node-maven:latest
  variables:
    BROWSER_OPTS: $CHROME_OPTS

test-firefox:
  extends: .testing
  image: registry.gitlab.com/aweframework/docker-tools/browsers-node-maven:latest
  variables:
    BROWSER_OPTS: $FIREFOX_OPTS

##############################
# Analysis stage
##############################

check-sonar:
  stage: analysis
  image: cfmanteiga/alpine-bash-curl-jq:latest
  script:
  - sonarUrl="https://sonarcloud.io/api/project_branches/list?project=AWE"
  - sonarBranches=`curl -s $sonarUrl`
  - echo $sonarBranches
  - echo "Branch to check - $CI_COMMIT_REF_NAME"
  - sonarStatus=`echo $sonarBranches | jq --arg BRANCH "$CI_COMMIT_REF_NAME" '.branches | map(select(.name == $BRANCH)) | .[0].status.qualityGateStatus'`
  - echo "Sonar has ended with a $sonarStatus status"
  - exitWithErrors=`echo $sonarStatus | sed -e 's/"//g' | awk '{printf ($1 != "OK")}'`
  - exit $exitWithErrors
  except:
  - master
  - develop
  - tags
  - release/.*
  - feature/test-deploy

#sast:
#  stage: analysis
#  extends: .analyze
#
#dependency_scanning:
#  stage: analysis
#  extends: .analyze

##############################
# Site stage
##############################

publish-docs:
  stage: site
  image: cfmanteiga/alpine-bash-curl-jq:latest
  script:
  - curl -H "$DINAMIQ_HEADERS" $DINAMIQ_URL
  only:
  - develop

site:
  image: maven:3.5-jdk-8
  stage: site
  script:
  - mvn $MAVEN_CLI_OPTS install site -DskipTests -Dskip.karma=true -Dbuild.environment=production -f awe-framework/pom.xml
  artifacts:
    paths:
    - awe-framework/target/site/apidocs
    - awe-framework/awe-generic-screens/src/main/resources/schemas/
  only:
  - master
  - release/.*

##############################
# Package stage
##############################

package-build:
  stage: package
  services:
  - docker:dind
  tags:
  - docker
  script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker build -t registry.gitlab.com/aweframework/awe/awe-boot:latest ./awe-tests/awe-boot
  - docker push registry.gitlab.com/aweframework/awe/awe-boot:latest
  only:
  - develop

##############################
# Deploy stage
##############################

deploy:
  image: maven:3.5-jdk-8
  stage: deploy
  script:
  - mvn $MAVEN_CLI_OPTS deploy $DEPLOY_OPTS
  only:
  - develop

deploy-tag-maven-central:
  image: maven:3.5-jdk-8
  stage: deploy
  before_script:
  ## Add gpg key to sign
  - gpg --batch --import <(echo "$GPG_PRIVATE_KEY")
  script:
  - mvn $MAVEN_CLI_OPTS deploy $DEPLOY_OPTS -DperformRelease=true
  only:
  - tags

k8s-deploy-staging:
  extends: .k8s_deploy
  environment:
    name: staging
    url: http://staging.aweframework.com
  only:
  - develop
  - feature/test-deploy

k8s-deploy-production:
  extends: .k8s_deploy
  environment:
    name: production
    url: http://demo.aweframework.com
  only:
  - master
  when: manual

pages:
  stage: deploy
  dependencies:
  - site
  script:
  - mkdir -p .public/docs/schemas
  - cp -r awe-framework/target/site/apidocs .public/javadoc-api/
  - cp -r awe-framework/awe-generic-screens/src/main/resources/schemas/awe/*.xsd .public/docs/schemas/
  - mv .public public
  artifacts:
    paths:
    - public
  only:
  - master

##############################
# Release stage
##############################

start-release:
  image: registry.gitlab.com/aweframework/docker-tools/maven-jdk8-jq-git:latest
  stage: release
  allow_failure: false
  script:
  - *git_push_credentials
  ## Generate changelog
  - git checkout $CI_COMMIT_REF_NAME
  - chmod +x ./bin/changelog.sh
  - /bin/sh ./bin/changelog.sh
  - git checkout ./bin/changelog.sh
  - git add ./CHANGELOG.md
  - git commit -m "Generated CHANGELOG"
  ## Generate release
  - mvn $MAVEN_CLI_OPTS gitflow:release-start -DskipTestProject=true -DpushRemote=true
  only:
  - develop
  when: manual

finish-release:
  image: maven:3.5-jdk-8
  stage: release
  allow_failure: false
  script:
  - *git_push_credentials
  ## Generate release
  - mvn $MAVEN_CLI_OPTS gitflow:release-finish -DskipTestProject=true -DpushRemote=false
  ## Update property on develop
  - git checkout develop
  - mvn $MAVEN_CLI_OPTS xml:transform --non-recursive
  - git add ./pom.xml
  - git commit -m "Updated revision property"
  - git push origin --mirror
  only:
  - release/.*
