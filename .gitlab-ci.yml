image: maven:3.5-jdk-8

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SONAR_OPTS: "-Dsonar.projectKey=AWE -Dsonar.organization=almis-open-source -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN"  
  CI_PROJECT_URL_SSH: "origin git@gitlab.com:awe-team/awe.git"

cache:
  paths:
    - .m2/repository/
    - target/

stages:
    - build
    - test
    - analize
    - site
    - deploy
    
build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS compile

test:
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS test sonar:sonar -DgenerateAggregationReport=true $SONAR_OPTS
    - cat awe-boot/target/coverage-reports/index.html | grep -o 'Total[^%]*%' | sed -e 's/Total/Jacoco-Test-Coverage:/g'
  artifacts:
    paths:
      - awe-boot/target/surefire-reports/
      - awe-boot/target/coverage-reports/
    reports:
      junit:
      - awe-boot/target/surefire-reports/TEST-*.xml

site:
  stage: site
  script:
    - mvn $MAVEN_CLI_OPTS site
  artifacts:
    paths:
      - target/apidocs
      - awe-generic-screens/src/main/resources/schemas/        
    
deploy:
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy -DskipTests      
  only:
    - develop    
    
pages:
  stage: deploy
  dependencies:
    - site
  script:
    - mkdir .public
    - cp target/apidocs .public/apidocs
    - cp awe-generic-screens/src/main/resources/schemas/awe ./public/schemas/awe
    - mv .public public
  artifacts:
    paths:
      - public
  only:
    - develop

release:
  stage: deploy
  before_script:
    ## Install ssh-agent if not already installed, it is required by Docker.
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Use ssh-keyscan to scan the keys of your private server.
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    ## Config git
    - git config --global user.email no-reply@almis.com
    - git config --global user.name "Gitlab CI"
    - git remote set-url $CI_PROJECT_URL_SSH
    ## Add gpg key to sign
    - gpg --batch --import <(echo "$GPG_PRIVATE_KEY")
  script:
    - mvn $MAVEN_CLI_OPTS -B gitflow:release -DskipTestProject=true
    - git checkout master
    - mvn $MAVEN_CLI_OPTS deploy -DperformRelease=true
  when: manual
  
dependency_scanning:  
  image: docker:stable
  stage: analize
  variables:
    DOCKER_DRIVER: overlay2
  allow_failure: true
  services:
    - docker:stable-dind
  script:
    - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
        --env DEP_SCAN_DISABLE_REMOTE_CHECKS="${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}"
        --volume "$PWD:/code"
        --volume /var/run/docker.sock:/var/run/docker.sock
        "registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION" /code
  artifacts:
    reports:
      dependency_scanning: gl-dependency-scanning-report.json