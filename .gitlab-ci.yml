##############################
# Pipeline definition
##############################

image: maven:3.6-jdk-11

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml -Dsettings.security=.m2/settings-security.xml -P!devtools"
  MAVEN_REPO_PATH: ".m2/repository"
  SAST_PULL_ANALYZER_IMAGES: "0"
  SAST_RUN_ANALYZER_TIMEOUT: 30m
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  SONAR_OPTS: "-Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.organization=$SONAR_ORGANIZATION -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.qualitygate.wait=true"
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  SKIP_TESTS: "-DskipTests"
  IT_OPTS: "-f awe-tests/awe-boot/pom.xml -Dskip.junit=true -Dskip.karma=true -Dskip.selenium=false -DgenerateIntegrationReport=true"
  UT_OPTS: "-f awe-tests/awe-boot/pom.xml -Dskip.frontend=true -DgenerateIntegrationReport=true"
  DEPLOY_OPTS: "-f awe-framework/pom.xml -DskipTests -Darchetype.test.skip=true -Dskip.javadoc=false -Dbuild.environment=production"
  CHROME_OPTS: "-Dbrowser=headless-chrome"
  FIREFOX_OPTS: "-Dbrowser=headless-firefox"
  CI_PROJECT_URL_SSH: "origin git@gitlab.com:aweframework/awe.git"
  DOCKER_DRIVER: overlay
  SPRING_PROFILES_ACTIVE: gitlab-ci
  KUBERNETES_PROJECT_ID: wired-armor-229610
  KUBERNETES_CLUSTER_NAME: awe-boot-cluster
  CACHE_KEY: "$CI_PIPELINE_IID-$CI_COMMIT_REF_SLUG"
  API_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID"
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the sonar task.

cache:
  key: $CACHE_KEY
  policy: pull
  paths:
    - .m2/repository/
    - awe-framework/awe-client-angular/node_modules/
    - awe-framework/awe-modules/awe-tools/node_modules/

stages:
  - build
  - unit test
  - integration test
  - analysis
  - site
  - package
  - deploy
  - release

##############################
# Pipeline rules
##############################

.if-default: &if-default
  if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME == "develop" || $CI_MERGE_REQUEST_IID'
.if-master: &if-master
  if: '$CI_COMMIT_REF_NAME == "master"'
.if-develop: &if-develop
  if: '$CI_COMMIT_REF_NAME == "develop"'
.if-merge-request: &if-merge-request
  if: '$CI_MERGE_REQUEST_IID'
.if-tag: &if-tag
  if: '$CI_COMMIT_TAG'


##############################
# Build stage
##############################

.build:
  stage: build
  cache:
    key: $CACHE_KEY
    policy: push
    paths:
      - .m2/repository/
      - awe-framework/awe-client-angular/node_modules/
      - awe-framework/awe-modules/awe-tools/node_modules/
  script:
    - mvn $MAVEN_CLI_OPTS clean install $SKIP_TESTS
  retry: 2

Build project:
  extends: .build
  artifacts:
    paths:
      - awe-tests/awe-boot/target/awe-boot.war
    expire_in: 1 day
  rules:
    - <<: *if-default

##############################
# Unit testing stage
##############################

# Unit testing extension
.unit-testing:
  stage: unit test
  image: registry.gitlab.com/aweframework/docker-tools/browsers-node-maven:latest
  allow_failure: false
  dependencies: []
  script:
    - mvn $MAVEN_CLI_OPTS verify $UT_OPTS -Dsurefire.suite=**/$UNIT_TEST_SUITE -P$TEST_NAME
    - cp awe-tests/awe-boot/target/jacoco.exec awe-tests/awe-boot/target/jacoco-${TEST_NAME}-ut.exec
  rules:
    - <<: *if-default
  artifacts:
    paths:
      - awe-tests/awe-boot/target/surefire-reports/
      - awe-tests/awe-boot/target/jacoco-${TEST_NAME}-ut.exec
    expire_in: 1 day
    reports:
      junit:
        - awe-tests/awe-boot/target/surefire-reports/TEST-*.xml

All UT:
  extends: .unit-testing
  variables:
    UNIT_TEST_SUITE: AllTestsSuite.class
    TEST_NAME: all

Oracle UT:
  extends: .unit-testing
  services:
    - epiclabs/docker-oracle-xe-11g
  variables:
    ORACLE_ALLOW_REMOTE: "true"
    ORACLE_PASSWORD: "$DATABASE_PASSWORD"
    RELAX_SECURITY: "1"
    UNIT_TEST_SUITE: SpringOracleTestsSuite.class
    TEST_NAME: oracle

MySQL UT:
  extends: .unit-testing
  variables:
    MYSQL_DATABASE: "awetestdb"
    MYSQL_ROOT_PASSWORD: "$DATABASE_PASSWORD"
    UNIT_TEST_SUITE: SpringMySQLTestsSuite.class
    TEST_NAME: mysql
  services:
    - mysql

SQL Server UT:
  extends: .unit-testing
  before_script:
    - npm install
    - node createDb.js "$DATABASE_PASSWORD"
  variables:
    MSSQL_HOST: microsoft-mssql-server-linux
    ACCEPT_EULA: Y
    SA_PASSWORD: "$DATABASE_PASSWORD"
    UNIT_TEST_SUITE: SpringSQLServerTestsSuite.class
    TEST_NAME: sqlserver
  services:
    - microsoft/mssql-server-linux

Frontend UT:
  stage: unit test
  image: registry.gitlab.com/aweframework/docker-tools/browsers-node-maven:latest
  script:
    - mvn -f awe-framework/awe-client-angular/pom.xml $MAVEN_CLI_OPTS test
  artifacts:
    paths:
      - awe-framework/awe-client-angular/target/reports/karma/
    expire_in: 1 day
    reports:
      junit:
        - awe-framework/awe-client-angular/target/reports/karma/junit/*.xml
  rules:
    - <<: *if-default

Javadoc test:
  stage: unit test
  script:
    - mvn -f awe-framework/pom.xml $MAVEN_CLI_OPTS javadoc:aggregate-no-fork -Dskip.javadoc=false -Ptest-javadoc
  artifacts:
    paths:
      - awe-framework/target/site/apidocs
    expire_in: 1 day
  rules:
    - <<: *if-merge-request

##############################
# Integration testing stage
##############################

# Browser testing extension
.browser-testing:
  stage: integration test
  image: registry.gitlab.com/aweframework/docker-tools/browsers-node-maven:latest
  allow_failure: true
  dependencies: []
  script:
    - mvn -f awe-tests/awe-boot/pom.xml $MAVEN_CLI_OPTS verify $IT_OPTS $BROWSER_OPTS
  after_script:
    - cp awe-tests/awe-boot/target/jacoco-it.exec awe-tests/awe-boot/target/jacoco-$TEST_NAME-it.exec
    - search=`cat awe-tests/awe-boot/target/surefire-reports/TEST-com.almis.awe.test.AllTestsSuiteIT.xml`
    - errors=`echo $search | grep 'errors="[^"]*' | sed -e 's/.*errors="//g' | sed -e 's/".*//g' | awk 'BEGIN { FPAT="[0-9]+"} {printf $1}'`
    - failures=`echo $search | grep 'failures="[^"]*' | sed -e 's/.*failures="//g' | sed -e 's/".*//g' | awk 'BEGIN { FPAT="[0-9]+"} {printf $1}'`
    - echo "$errors errors and $failures failures found"
  artifacts:
    expose_as: 'Selenium reports'
    paths:
      - awe-tests/awe-boot/target/tests/
      - awe-tests/awe-boot/target/surefire-reports/
      - awe-tests/awe-boot/target/jacoco-${TEST_NAME}-it.exec
    expire_in: 1 day
    reports:
      junit:
        - awe-tests/awe-boot/target/surefire-reports/TEST-*.xml
    when: always
  rules:
      - <<: *if-default

Firefox IT:
  extends: .browser-testing
  variables:
    BROWSER_OPTS: $FIREFOX_OPTS
    TEST_NAME: firefox

Chrome IT:
  extends: .browser-testing
  variables:
    BROWSER_OPTS: $CHROME_OPTS
    TEST_NAME: chrome

##############################
# Analysis stage
##############################

Launch Sonar:
  stage: analysis
  cache:
    key: $CACHE_KEY
    paths:
      - .sonar/cache
  dependencies:
    - All UT
    - Oracle UT
    - SQL Server UT
    - MySQL UT
    - Frontend UT
    - Firefox IT
    - Chrome IT
  script:
    - mvn $MAVEN_CLI_OPTS verify -Dskip.frontend=true -DgenerateCoverageReport=true sonar:sonar $SKIP_TESTS $SONAR_OPTS
    - cat awe-tests/awe-boot/target/coverage-reports/index.html | grep -o 'Total[^%]*%' | sed -e 's/Total/Jacoco-Test-Coverage:/g'
  artifacts:
    paths:
      - awe-tests/awe-boot/target/coverage-reports/
    expire_in: 1 week
  rules:
    - <<: *if-default

##############################
# Site stage
##############################

Publish docs:
  image: cfmanteiga/alpine-bash-curl-jq:latest
  stage: site
  cache: {}
  dependencies: []
  script:
    - curl -H "$DINAMIQ_HEADERS" $DINAMIQ_URL
  rules:
    - <<: *if-develop

Generate javadoc & schemas:
  stage: site
  script:
    - mvn $MAVEN_CLI_OPTS install site javadoc:aggregate $SKIP_TESTS -Darchetype.test.skip=true -Dskip.javadoc=false -Dskip.main=true -Dskip.frontend=true -Dbuild.environment=production -f awe-framework/pom.xml
  artifacts:
    paths:
      - awe-framework/target/site/apidocs
      - awe-framework/awe-generic-screens/src/main/resources/schemas/
    expire_in: 1 day
  rules:
    - <<: *if-master
    - <<: *if-develop

##############################
# Package stage
##############################

Build package:
  image: docker:latest
  stage: package
  cache: {}
  dependencies:
    - Build project
  services:
    - docker:dind
  tags:
    - docker
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/aweframework/awe/awe-boot:latest ./awe-tests/awe-boot
    - docker push registry.gitlab.com/aweframework/awe/awe-boot:latest
  rules:
    - <<: *if-develop

##############################
# Deploy stage
##############################

Deploy snapshot:
  stage: deploy
  dependencies: []
  script:
    - mvn $MAVEN_CLI_OPTS deploy $DEPLOY_OPTS
  rules:
    - <<: *if-develop

Deploy Maven Central:
  stage: deploy
  dependencies: []
  before_script:
    ## Add gpg key to sign
    - gpg --batch --import <(echo "$GPG_PRIVATE_KEY")
  script:
    - mvn $MAVEN_CLI_OPTS deploy $DEPLOY_OPTS -DperformRelease=true
  rules:
    - <<: *if-tag

# Kubernetes deployment
.k8s_deploy:
  image: google/cloud-sdk
  cache: {}
  dependencies: []
  stage: deploy
  script:
    - echo "$GOOGLE_KEY" > key.json
    - gcloud auth activate-service-account --key-file key.json
    - gcloud config set compute/zone $KUBE_ZONE
    - gcloud config set project $KUBERNETES_PROJECT_ID
    - gcloud config set container/use_client_certificate True
    - gcloud container clusters get-credentials $KUBERNETES_CLUSTER_NAME
    - kubectl config set-cluster $KUBERNETES_CLUSTER_NAME --server="$KUBE_URL" --insecure-skip-tls-verify=true
    - kubectl config set-credentials admin --username="$KUBE_USER" --password="$KUBE_PASSWORD"
    - kubectl config set-context default-system --cluster=$KUBERNETES_CLUSTER_NAME --user=admin --namespace=$CI_ENVIRONMENT_SLUG
    - kubectl config use-context default-system
    - kubectl delete secret registry.gitlab.com --ignore-not-found
    - kubectl create secret docker-registry registry.gitlab.com --docker-server=https://registry.gitlab.com --docker-username=$CI_USERNAME --docker-password=$CI_PASSWORD --docker-email=$CI_EMAIL
    - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" awe-tests/awe-boot/deployment.yaml
    - kubectl delete --all pods --namespace=$CI_ENVIRONMENT_SLUG
    - kubectl apply -f awe-tests/awe-boot/deployment.yaml

Deploy staging:
  extends: .k8s_deploy
  environment:
    name: staging
    url: http://staging.aweframework.com
  only:
    refs:
      - develop
    kubernetes: active

Deploy production:
  extends: .k8s_deploy
  environment:
    name: production
    url: http://demo.aweframework.com
  only:
    refs:
      - master
    kubernetes: active

pages:
  image: docker:latest
  stage: deploy
  cache: {}
  dependencies:
    - Generate javadoc & schemas
  script:
    - mkdir -p .public/docs/schemas
    - cp -r awe-framework/target/site/apidocs .public/javadoc-api/
    - cp -r awe-framework/awe-generic-screens/src/main/resources/schemas/awe/*.xsd .public/docs/schemas/
    - mv .public public
  artifacts:
    paths:
      - public
    expire_in: 1 day
  rules:
    - <<: *if-master
    - <<: *if-develop

##############################
# Release stage
##############################

.git_credentials_template: &git_credentials
  before_script:
    ## Push git credentials
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config --global user.email no-reply@almis.com
    - git config --global user.name "Gitlab CI"
    - git remote set-url $CI_PROJECT_URL_SSH

Generate a new milestone:
  image: registry.gitlab.com/aweframework/docker-tools/maven-jdk8-jq-git:latest
  stage: release
  <<: *git_credentials
  script:
    ## Generate milestone
    - git checkout -f develop
    - git pull --rebase
    - chmod +x ./bin/milestone.sh
    - ./bin/milestone.sh $API_URL $API_TOKEN
  rules:
    - <<: *if-tag

Start a new release:
  image: registry.gitlab.com/aweframework/docker-tools/maven-jdk8-jq-git:latest
  cache: {}
  dependencies: []
  stage: release
  <<: *git_credentials
  script:
    ## Generate changelog
    - git checkout $CI_COMMIT_REF_NAME
    - chmod +x ./bin/changelog.sh
    - ./bin/changelog.sh $API_URL $API_TOKEN "$CI_PROJECT_TITLE"
    - git checkout ./bin/changelog.sh
    - git add ./CHANGELOG.md
    - git commit -m "Generated CHANGELOG"
    ## Generate release
    - mvn -B gitflow:release -DskipTestProject=true -DpushRemote=true -DversionProperty=revision
  variables:
    GIT_STRATEGY: clone
  rules:
    - <<: *if-develop
      when: manual
      allow_failure: true